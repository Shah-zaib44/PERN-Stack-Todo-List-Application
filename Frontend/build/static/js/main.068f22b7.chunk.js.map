{"version":3,"sources":["reportWebVitals.ts","LocalStorage.tsx","Database.tsx","Array.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","LocalStorage","React","useState","inputValue","setinputValue","update","setupdate","updateState","setupdateState","items","setitems","storeItemInLocalStorage","item","listItems","localStorage","getItem","JSON","parse","push","setItem","stringify","updateItemInLocalStorage","forEach","task","index","console","log","getItemFromLocalStorage","useEffect","onClick","onSubmit","e","target","preventDefault","type","autoFocus","onChange","value","map","splice","removeItemFromLocalStorage","Database","createItem","a","bodyFormData","axios","method","url","data","headers","response","getItems","catch","updateItem","id","deleteItem","item_id","Array","ReactDOM","render","StrictMode","to","path","document","getElementById"],"mappings":"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","file":"static/js/main.068f22b7.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","//LOCAL STORAGE\nimport React, { FormEvent, useEffect } from \"react\";\n\nimport \"./App.css\";\n\nconst LocalStorage = () => {\n  const [inputValue, setinputValue] = React.useState(\"\");\n  const [update, setupdate] = React.useState(\"\");\n  const [updateState, setupdateState] = React.useState(false);\n  const [items, setitems] = React.useState([] as any);\n\n  const handleFormEvent = (e: FormEvent<HTMLFormElement>) => {\n    console.log(\"inputvalue\" + inputValue);\n    console.log(e.target);\n    if (inputValue !== \"\" && updateState) {\n      updateItemInLocalStorage(update);\n      getItemFromLocalStorage();\n      setinputValue(\"\");\n    }\n    if (inputValue !== \"\" && !updateState) {\n      storeItemInLocalStorage(inputValue);\n\n      getItemFromLocalStorage();\n      setinputValue(\"\");\n    }\n\n    e.preventDefault();\n  };\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setinputValue(e.target.value);\n\n    e.preventDefault();\n  };\n  const storeItemInLocalStorage = (item) => {\n    let listItems;\n    if (localStorage.getItem(\"items\") === null) {\n      listItems = [];\n    } else {\n      listItems = JSON.parse(localStorage.getItem(\"items\") || \"{}\");\n    }\n\n    listItems.push(item);\n\n    localStorage.setItem(\"items\", JSON.stringify(listItems));\n  };\n  const updateItemInLocalStorage = (item) => {\n    let listItems = JSON.parse(localStorage.getItem(\"items\") || \"{}\");\n\n    listItems.forEach((task, index) => {\n      console.log(\"item\" + item);\n      console.log(\"task\" + task + \"index\" + index);\n      if (item === task) {\n        listItems[index] = inputValue;\n      }\n    });\n    console.log(\"listItems\" + listItems);\n\n    localStorage.setItem(\"items\", JSON.stringify(listItems));\n  };\n  const getItemFromLocalStorage = () => {\n    let listItems;\n    if (localStorage.getItem(\"items\") === null) {\n      listItems = [];\n    } else {\n      listItems = JSON.parse(localStorage.getItem(\"items\") || \"{}\");\n    }\n    setitems([...listItems]);\n  };\n  const removeItemFromLocalStorage = (item) => {\n    let listItems;\n    if (localStorage.getItem(\"items\") === null) {\n      listItems = [];\n    } else {\n      listItems = JSON.parse(localStorage.getItem(\"items\") || \"{}\");\n    }\n    listItems.forEach(function (task, index) {\n      if (item === task) {\n        listItems.splice(index, 1);\n      }\n    });\n\n    localStorage.setItem(\"items\", JSON.stringify(listItems));\n  };\n  useEffect(() => {\n    getItemFromLocalStorage();\n  }, []);\n  return (\n    <>\n      {updateState && (\n        <button onClick={() => setupdateState(false)}>Add</button>\n      )}\n      <h1>{updateState ? \"Update\" : \"Add\"}</h1>\n      <form onSubmit={handleFormEvent}>\n        <input\n          type=\"text\"\n          autoFocus\n          onChange={handleChange}\n          value={inputValue}\n        />\n        <input type=\"submit\" />\n      </form>\n      <ul>\n        {items.map((item, index) => (\n          <li key={index}>\n            {item}{\" \"}\n            <button\n              onClick={() => {\n                setupdate(item);\n                setinputValue(item);\n                setupdateState(true);\n              }}\n            >\n              Update{\" \"}\n            </button>\n            <button\n              onClick={() => {\n                removeItemFromLocalStorage(item);\n\n                getItemFromLocalStorage();\n              }}\n            >\n              Delete{\" \"}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default LocalStorage;\n","// DATABASE\nimport React, { FormEvent, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\n\nconst Database = () => {\n  const [inputValue, setinputValue] = React.useState(\"\");\n  const [update, setupdate] = React.useState(\"\");\n  const [updateState, setupdateState] = React.useState(false);\n  const [items, setitems] = React.useState([] as any);\n\n  const handleFormEvent = (e: FormEvent<HTMLFormElement>) => {\n    if (inputValue !== \"\" && updateState) {\n      updateItem(update);\n\n      setinputValue(\"\");\n    }\n    if (inputValue !== \"\" && !updateState) {\n      createItem();\n\n      setinputValue(\"\");\n    }\n\n    e.preventDefault();\n  };\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setinputValue(e.target.value);\n\n    e.preventDefault();\n  };\n  const createItem = async () => {\n    var bodyFormData = {\n      item: inputValue,\n    };\n\n    axios({\n      method: \"post\",\n      url: \"/api/todoList/\",\n      data: bodyFormData,\n\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then(function (response) {\n        getItems();\n      })\n      .catch(function (response) {\n        console.log(response);\n      });\n  };\n  const updateItem = async (id) => {\n    var bodyFormData = {\n      item: inputValue,\n    };\n\n    axios({\n      method: \"put\",\n      url: `/api/todoList/${id}/`,\n      data: bodyFormData,\n\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then(function (response) {\n        getItems();\n      })\n      .catch(function (response) {\n        console.log(response);\n      });\n  };\n  const deleteItem = async (id) => {\n    axios({\n      method: \"delete\",\n      url: `/api/todoList/${id}/`,\n\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then(function (response) {\n        getItems();\n      })\n      .catch(function (response) {\n        console.log(response);\n      });\n  };\n\n  const getItems = async () => {\n    axios({\n      method: \"get\",\n      url: \"/api/todoList/\",\n    })\n      .then(function (response) {\n        setitems(response.data);\n      })\n      .catch(function (response) {\n        console.log(response);\n      });\n  };\n  useEffect(() => {\n    getItems();\n  }, []);\n  return (\n    <>\n      {updateState && (\n        <button onClick={() => setupdateState(false)}>Add</button>\n      )}\n      <h1>{updateState ? \"Update\" : \"Add\"}</h1>\n      <form onSubmit={handleFormEvent}>\n        <input type=\"text\" onChange={handleChange} value={inputValue} />\n        <input type=\"submit\" />\n      </form>\n\n      <ul>\n        {items.map((item, index) => (\n          <li key={index}>\n            {item.item}{\" \"}\n            <button\n              onClick={() => {\n                setupdate(item.item_id);\n                setinputValue(item.item);\n                setupdateState(true);\n              }}\n            >\n              Update{\" \"}\n            </button>\n            <button\n              onClick={() => {\n                deleteItem(item.item_id);\n              }}\n            >\n              Delete{\" \"}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default Database;\n","//ARRAY\nimport React, { FormEvent } from \"react\";\n\nimport \"./App.css\";\n\nconst Array = () => {\n  const [inputValue, setinputValue] = React.useState(\"\");\n  const [update, setupdate] = React.useState(\"\");\n  const [updateState, setupdateState] = React.useState(false);\n  const [items, setitems] = React.useState([] as any);\n\n  const handleFormEvent = (e: FormEvent<HTMLFormElement>) => {\n    if (inputValue !== \"\" && updateState) {\n      updateItem(update);\n\n      setinputValue(\"\");\n    }\n    if (inputValue !== \"\" && !updateState) {\n      setitems((items) => [...items, inputValue]);\n      setinputValue(\"\");\n    }\n\n    e.preventDefault();\n  };\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setinputValue(e.target.value);\n\n    e.preventDefault();\n  };\n  const updateItem = (id) => {\n    items[id] = inputValue;\n    console.log(items);\n    setitems([...items]);\n  };\n  return (\n    <>\n      {updateState && (\n        <button onClick={() => setupdateState(false)}>Add</button>\n      )}\n      <h1>{updateState ? \"Update\" : \"Add\"}</h1>\n      <form onSubmit={handleFormEvent}>\n        <input type=\"text\" onChange={handleChange} value={inputValue} />\n        <input type=\"submit\" />\n      </form>\n\n      <ul>\n        {items.map((item, index) => (\n          <li key={index}>\n            {item}{\" \"}\n            <button\n              onClick={() => {\n                setupdate(index);\n                setinputValue(item);\n                setupdateState(true);\n              }}\n            >\n              Update{\" \"}\n            </button>\n            <button\n              onClick={() => {\n                items.splice(index, 1);\n\n                setitems([...items]);\n              }}\n            >\n              Delete{\" \"}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default Array;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n// import App from './App';\nimport reportWebVitals from \"./reportWebVitals\";\nimport LocalStorage from \"./LocalStorage\";\nimport Database from \"./Database\";\nimport Array from \"./Array\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <div>\n        <nav>\n          <ul>\n            <li>\n              <Link to=\"/LocalStorage\">LocalStorage</Link>\n            </li>\n            <li>\n              <Link to=\"/Database\">Database</Link>\n            </li>\n            <li>\n              <Link to=\"/Array\">Array</Link>\n            </li>\n          </ul>\n        </nav>\n\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Switch>\n          <Route path=\"/LocalStorage\">\n            <LocalStorage />\n          </Route>\n          <Route path=\"/Database\">\n            <Database />\n          </Route>\n          <Route path=\"/Array\">\n            <Array />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}